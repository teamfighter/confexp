name: Release Binaries

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build binary
        run: pyinstaller --clean confexp.spec

      # --- Debug: show dist tree ---
      - name: Show dist contents (Windows)
        if: runner.os == 'Windows'
        shell: powershell
        run: |
          Write-Host "=== dist tree ==="
          Get-ChildItem -Recurse dist | Select-Object FullName, Length

      - name: Show dist contents (macOS/Linux)
        if: runner.os != 'Windows'
        shell: bash
        run: |
          echo "=== dist tree ==="
          find dist -maxdepth 3 -type f -ls || true

      # --- Archive per-OS, auto-detect binary path ---
      - name: Archive Windows binary
        if: runner.os == 'Windows'
        shell: powershell
        run: |
          New-Item -ItemType Directory -Force -Path upload | Out-Null
          $bin = Get-ChildItem -Path dist -Recurse -Include *.exe | Select-Object -First 1
          if (-not $bin) {
            Write-Host "No .exe found. Dist contents:"
            Get-ChildItem -Recurse dist | Select-Object FullName, Length
            throw "No Windows executable found in dist"
          }
          Copy-Item $bin.FullName upload\confexp.exe -Force
          Compress-Archive -Path upload\confexp.exe -DestinationPath upload\confexp-windows.zip -Force

      - name: Archive macOS binary
        if: runner.os == 'macOS'
        shell: bash
        run: |
          mkdir -p upload
          BIN_PATH=$(find dist -type f -maxdepth 3 -name "confexp*" | head -n 1)
          if [ -z "$BIN_PATH" ]; then
            echo "No macOS binary found. Dist contents:"; find dist -maxdepth 3 -type f -ls
            exit 1
          fi
          cp "$BIN_PATH" upload/confexp
          zip -j upload/confexp-macos.zip upload/confexp

      - name: Archive Linux binary
        if: runner.os == 'Linux'
        shell: bash
        run: |
          mkdir -p upload
          BIN_PATH=$(find dist -type f -maxdepth 3 -name "confexp*" | head -n 1)
          if [ -z "$BIN_PATH" ]; then
            echo "No Linux binary found. Dist contents:"; find dist -maxdepth 3 -type f -ls
            exit 1
          fi
          cp "$BIN_PATH" upload/confexp
          zip -j upload/confexp-linux.zip upload/confexp

      - name: Upload binaries
        uses: actions/upload-artifact@v4
        with:
          name: confexp-${{ runner.os }}
          path: upload/*
